gitlab:
  webservice:
    # Webservice Target Node Pool Totals
    # 308 vCPU
    # 385 GB memory (request)
    # 539 GB memory (limit)
    maxReplicas: 77
    maxUnavailable: 40
    minReplicas: 58 # Min pods recommended to be set to 75% of max to start
    resources:
      limits:
        memory: 7G # roughly, 1.75GB/worker
      requests:
        cpu: 4 # requests.cpu <= workerProcesses
        memory: 5G # roughly, 1.25GB/worker
    workerProcesses: 4
    hpa:
      cpu:
        targetAverageValue: 1600m # Increased to stabilize scaling and accommodate for higher CPU load on large environment
    ingress:
      proxyBodySize: 0 # To allow large file uploads like imports
    nodeSelector:
      workload: webservice
  sidekiq:
    # Sidekiq Target Node Pool Totals
    # 12.6 vCPU
    # 28 GB memory (request)
    # 56 GB memory (limit)
    maxReplicas: 14
    minReplicas: 10
    resources:
      limits:
        memory: 4G
      requests:
        cpu: 900m # Assume single-process, 1 CPU
        memory: 2G
    hpa:
      cpu:
        targetAverageValue: 700m # Increased to stabilize scaling and accommodate for higher CPU load on large environment
    nodeSelector:
      workload: sidekiq
  toolbox:
    backups:
      # Below, GCS is used an example for the ObjectStorage section.
      # All ObjectStorage options are documented here:
      # https://docs.gitlab.com/ee/administration/reference_architectures/50k_users.html#configure-the-object-storage
      objectStorage:
        backend: gcs
        config:
          gcpProject: example-gcp-projectname
          key: gcs.json
          secret: example-connection-secret
  migrations:
    # Migrations pod must point directly to PostgreSQL primary
    psql:
      host: example-postgresql-primary-ip
      password:
        secret: example-postgresql-secret
        key: password
      port: example-postgresql-primary-port

global:
  # Set pods to deploy on support node pool by default.
  # This ensures that only the Webservice and Sidekiq workloads
  # are deployed to their respective pools and have sufficient resources.
  nodeSelector:
    workload: support
  appConfig:
    # For context on the ObjectStorage configuration below, see:
    # https://docs.gitlab.com/ee/administration/reference_architectures/50k_users.html#configure-the-object-storage
    object_store:
      enabled: true
      connection:
        secret: example-storage-secret
        key: password
    artifacts:
      bucket: example-artifacts-bucket-name
    backups:
      bucket: example-backups-bucket-name
    dependencyProxy:
      bucket: example-dependency-proxy-bucket-name
    externalDiffs:
      bucket: example-external-diffs-bucket-name
      # Recommend to only store older External Diffs in Object Storage for performance reasons
      when: outdated
    lfs:
      bucket: example-lfs-bucket-name
    packages:
      bucket: example-packages-bucket-name
    terraformState:
      bucket: example-terraform-state-bucket-name
    uploads:
      bucket: example-uploads-bucket-name
  shell:
    authToken:
      secret: example-shell-secret
      key: password
  gitaly:
    authToken:
      secret: example-gitaly-praefect-external-token
      key: password
    enabled: false # Run Gitaly outside of cluster
    external:
    - name: default
      hostname: default.praefect.gitaly.com
      port: example-praefect-port
  gitlab:
    license:
      secret: example-gitlab-license
  hosts:
    domain: example.com
  minio:
    enabled: false
  psql:
    host: db.example.com
    password:
      secret: example-postgresql-secret
      key: password
    port:  example-postgresql-port
  redis:
    cache:
      host: example-redis-cache-1
      password:
        key: password
        secret: example-redis-secret
      sentinels:
      - host: cache.sentinel1.example.com
      - host: cache.sentinel2.example.com
      - host: cache.sentinel3.example.com
    host: example-redis-queue-1
    auth:
      key: password
      secret: example-redis-secret
    sentinels:
    - host: sentinel1.example.com
    - host: sentinel2.example.com
    - host: sentinel3.example.com
  registry:
    bucket: example-registry-storage

# Run NGinx pods on Webservice nodes as DaemonSet
nginx-ingress:
  controller:
    kind: DaemonSet
    nodeSelector:
      workload: webservice

registry:
  storage:
    extraKey: gcs.json
    key: registry-config
    secret: gcs-secret-example

# Run Redis outside of cluster
redis:
  install: false

# Database run outside of cluster
postgresql:
  install: false

# https://docs.gitlab.com/ee/ci/runners/#configuring-runners-in-gitlab
gitlab-runner:
  install: false
