.vcluster_review_common_vars: &vcluster_review_common_vars
  DNS_PROVIDER: "google"
  AGENT_NAME: "gkevc-ci-cluster"
  KUBE_INGRESS_BASE_DOMAIN: "cloud-native-vcluster.helm-charts.win"
  KUBE_NAMESPACE: "default"
  NAMESPACE: "${KUBE_NAMESPACE}"

.vcluster_review_template:
  extends: .review_template
  variables:
    <<: *vcluster_review_common_vars
    ADD_NGINX_DNS_ANNOTATIONS: "true"
  allow_failure: true
  before_script:
    - source scripts/ci/autodevops.sh
    - source scripts/ci/vcluster.sh
    - vcluster_install
  script:
    # Set up varfile
    - mkdir -p $(dirname "${VARIABLES_FILE}")
    # Connect to host cluster
    - set_context
    - check_kube_domain
    - kubectl version --output=json
    # Create vcluster
    - vcluster_create
    - vcluster_run kubectl version --output=json
    - vcluster_info
    # Copy the TLS cert secret to vcluster
    - vcluster_copy_secret ci-stack helm-charts-win-tls ${NAMESPACE}
    # Deploy to vcluster
    - vcluster_run ./scripts/ci/vcluster_deploy.sh

.stop_vcluster_review_template:
  extends: .stop_review_template
  variables:
    <<: *vcluster_review_common_vars
  before_script:
    # If the branch has already been deleted, fall back to master.
    - git checkout "${CI_COMMIT_REF_NAME}" || git checkout master
    - source scripts/ci/autodevops.sh
    - source scripts/ci/vcluster.sh
    - vcluster_install
  script:
    # Connect to host cluster
    - set_context
    # Delete vcluster from host
    - vcluster_delete

.vcluster_specs_template:
  extends: .specs
  variables:
    <<: *vcluster_review_common_vars
    RSPEC_TAGS: type:feature
  allow_failure: true
  before_script:
    - source scripts/ci/autodevops.sh
    - source scripts/ci/vcluster.sh
    - vcluster_install
  script:
    - ./scripts/ci/install_spec_dependencies.sh
    - set_context
    - vcluster_run kubectl version --output=json
    - vcluster_run ./scripts/ci/run_specs.sh
