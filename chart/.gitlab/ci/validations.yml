.kubeconform:
  stage: preflight
  when: always
  script:
    - kubectl version --client=true --output=json
    - helm version --template='{{.Version}}'
    - helm plugin list
    - helm repo add gitlab https://charts.gitlab.io
    - helm repo add jetstack https://charts.jetstack.io
    - helm dependency update
    - echo "$HELM_DEFAULT_SETTINGS" | tee ./template_settings.yaml
    - echo "$HELM_SETTINGS" | tee -a ./template_settings.yaml
    - echo "${KUBECONFORM_SCHEMA_LOCATION:-default}"
    - >
      helm kubeconform --strict --summary
      -f ./template_settings.yaml
      --kubernetes-version $KUBE_VERSION
      --schema-location "${KUBECONFORM_SCHEMA_LOCATION:-default}"
      --schema-location "$KUBE_CRD_SCHEMA_URL"
      --output json
      .
  rules:
    - if: '$PIPELINE_TYPE == "DOCS_PIPELINE"'
    - if: '$PIPELINE_TYPE =~ /_MR_PIPELINE$/'
    - if: '$PIPELINE_TYPE =~ /_BRANCH_PIPELINE$/'
    - if: '$PIPELINE_TYPE == "NIGHTLY_PIPELINE"'
  needs: ['lint_package']

"Validate 1.27.5":
  extends: .kubeconform
  variables:
    KUBE_VERSION: "1.27.5"
    HELM_SETTINGS: |
      global:
        ingress:
          apiVersion: networking.k8s.io/v1
        pdb:
          apiVersion: policy/v1
        hpa:
          apiVersion: autoscaling/v2
        batch:
          cronJob:
            apiVersion: batch/v1

"Validate 1.28.3":
  extends: .kubeconform
  variables:
    KUBE_VERSION: "1.28.3"
    HELM_SETTINGS: !reference ["Validate 1.27.5", variables, HELM_SETTINGS]

"Validate 1.29.4":
  extends: .kubeconform
  variables:
    KUBE_VERSION: "1.29.4"
    HELM_SETTINGS: !reference ["Validate 1.27.5", variables, HELM_SETTINGS]

"Validate 1.30.1":
  extends: .kubeconform
  variables:
    KUBE_VERSION: "1.30.1"
    HELM_SETTINGS: !reference ["Validate 1.27.5", variables, HELM_SETTINGS]

"Validate 1.31.1":
  extends: .kubeconform
  variables:
    KUBE_VERSION: "1.31.1"
    HELM_SETTINGS: !reference ["Validate 1.27.5", variables, HELM_SETTINGS]

