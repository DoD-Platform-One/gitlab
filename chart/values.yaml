## NOTICE
#
# Due to the scope and complexity of this chart, all possible values are
# not documented in this file. Extensive documentation is available.
#
# Please read the docs: https://docs.gitlab.com/charts/
#
# Because properties are regularly added, updated, or relocated, it is
# _strongly suggest_ to not "copy and paste" this YAML. Please provide
# Helm only those properties you need, and allow the defaults to be
# provided by the version of this chart at the time of deployment.

## Advanced Configuration
## https://docs.gitlab.com/charts/advanced
#
# Documentation for advanced configuration, such as
# - External PostgreSQL
# - External Gitaly
# - External Redis
# - External NGINX
# - External Object Storage providers
# - PersistentVolume configuration

## The global properties are used to configure multiple charts at once.
## https://docs.gitlab.com/charts/charts/globals

global:

  ## https://docs.gitlab.com/charts/charts/globals#configure-host-settings
  hosts:
    domain: dev.bigbang.mil
    gitlab:
      name: gitlab.dev.bigbang.mil
    registry:
      name: registry.dev.bigbang.mil

  ## https://docs.gitlab.com/charts/charts/globals#configure-ingress-settings
  ingress:
   # apiVersion: ""
    configureCertmanager: false

  # Override the API version to use for HorizontalPodAutoscaler
  hpa:
    apiVersion: "autoscaling/v2"

  # Override the API version to use for PodDisruptionBudget
  pdb:
    apiVersion: "policy/v1"

  # Override the API version to use for CronJob
  batch:
    cronJob:
      apiVersion: "batch/v1"

  ## https://docs.gitlab.com/charts/charts/globals#configure-redis-settings
  redis:
    auth:
      enabled: true
    securityContext:
      runAsUser: 1001
      fsGroup: 1001
      runAsNonRoot: true
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
      runAsNonRoot: true
      capabilities:
          drop:
          - ALL

  ## https://docs.gitlab.com/charts/charts/globals#configure-minio-settings
  minio:
    enabled: true
    credentials: {}
      # secret:

  ## https://docs.gitlab.com/charts/charts/globals#configure-appconfig-settings
  ## Rails based portions of this chart share many settings
  appConfig:
    ## https://docs.gitlab.com/charts/charts/globals#general-application-settings
    defaultCanCreateGroup: false
    
    omniauth:
      enabled: false


  ## https://docs.gitlab.com/charts/charts/gitlab/kas/
  kas:
    enabled: false

  ## https://docs.gitlab.com/charts/charts/globals#custom-certificate-authorities
  # configuration of certificates container & custom CA injection
  certificates:
    image:
      repository: registry1.dso.mil/ironbank/gitlab/gitlab/certificates
      tag: 18.4.2
      pullSecrets:
      - name: private-registry
    init:
      securityContext:
        capabilities:
          drop:
            - ALL
        runAsUser: 65534
        runAsNonRoot: true
    customCAs:
      # DoD approved certificates from https://public.cyber.mil/pki-pke/pkipke-document-library/

      - secret: ca-certs-australian-defence-organisation-cross-cert-chain
      - secret: ca-certs-australian-defence-organisation-direct-trust-chain
      - secret: ca-certs-boeing
      - secret: ca-certs-carillon-federal-services-trust-chain-1
      - secret: ca-certs-carillon-federal-services-trust-chain-2
      - secret: ca-certs-department-of-state-trust-chain-1
      - secret: ca-certs-department-of-state-trust-chain-2
      - secret: ca-certs-digicert-federal-ssp-trust-chain-1
      - secret: ca-certs-digicert-federal-ssp-trust-chain-2
      - secret: ca-certs-digicert-nfi-trust-chain-1
      - secret: ca-certs-digicert-nfi-trust-chain-2
      - secret: ca-certs-entrust-federal-ssp-trust-chain-1
      - secret: ca-certs-entrust-federal-ssp-trust-chain-2
      - secret: ca-certs-entrust-federal-ssp-trust-chain-3
      - secret: ca-certs-entrust-managed-service-nfi
      - secret: ca-certs-exostar-llc
      - secret: ca-certs-identrust-nfi
      - secret: ca-certs-lockheed-martin
      - secret: ca-certs-netherlands-ministry-of-defence
      - secret: ca-certs-northrop-grumman
      - secret: ca-certs-raytheon-trust-chain-1
      - secret: ca-certs-raytheon-trust-chain-2
      - secret: ca-certs-us-treasury-ssp-trust-chain-1
      - secret: ca-certs-us-treasury-ssp-trust-chain-2
      - secret: ca-certs-verizon-cybertrust-federal-ssp
      - secret: ca-certs-widepoint-federal-ssp-trust-chain-1
      - secret: ca-certs-widepoint-federal-ssp-trust-chain-2
      - secret: ca-certs-widepoint-nfi
      - secret: ca-certs-dod-intermediate-and-issuing-ca-certs
      - secret: ca-certs-dod-trust-anchors-self-signed
      - secret: ca-certs-eca

  ## kubectl image used by hooks to carry out specific jobs
  kubectl:
    image:
      repository: registry1.dso.mil/ironbank/gitlab/gitlab/kubectl
      tag: 18.4.2
      pullSecrets:
      - name: private-registry
    securityContext:
      # in most base images, this is `nobody:nogroup`
      runAsUser: 65534
      fsGroup: 65534
      seccompProfile:
        type: "RuntimeDefault"
  gitlabBase:
    image:
      # repository: busybox
      # tag: latest
      # 0. Busybox can not be hardened with no STIGS. Replacing with UBI-8 container
      # 1. UBI does not have the newly required /scripts/set-config template generator in its entrypoint.
      #   a. trying gitlab-base per https://repo1.dso.mil/dsop/gitlab/gitlab/gitlab-base/-/issues/77
      repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-base
      tag: "18.4.2"
      pullSecrets:
      - name: private-registry

  ## https://docs.gitlab.com/charts/charts/globals#service-accounts
  serviceAccount:
    enabled: true
    create: true
    annotations: {}
    automountServiceAccountToken: false
    ## Name to be used for serviceAccount, otherwise defaults to chart fullname
    # name:

## End of global

### -- We are exposing only the keys that BigBang overrides from the upstream chart. 
### Please refer to the upstream chart via "helm show values ./chart/charts/<upstream-package.tar.gz>" for other value configs.
### @default -- Upstream chart values

upstream:
  nameOverride: "gitlab"
  upgradeCheck:
    enabled: true
    image:
      repository: registry1.dso.mil/ironbank/redhat/ubi/ubi9
      tag: "9.6"
      pullSecrets:
      - name: private-registry
    securityContext:
      # in alpine/debian/busybox based images, this is `nobody:nogroup`
      runAsUser: 65534
      runAsGroup: 65534
      fsGroup: 65534
      seccompProfile:
        type: "RuntimeDefault"
    ## Allow to overwrite the specific security context under which the container is running.
    containerSecurityContext:
      runAsUser: 65534
      runAsGroup: 65534
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      capabilities:
        drop: [ "ALL" ]
    tolerations: []
    annotations:
      sidecar.istio.io/inject: "true"
    configMapAnnotations: {}
    resources:
      requests:
        cpu: 500m
        memory: 500Mi
      limits:
        cpu: 500m
        memory: 500Mi

  # Settings for the Let's Encrypt ACME Issuer
  certmanager-issuer:
    # The email address to register certificates requested from Let's Encrypt.
    # Required if using Let's Encrypt.
    email: email@example.com


  ## Installation of certmananger.
  ## This value replaces `certmanager.install` to allow certmanager schema validation to pass.
  ## See requirements.yaml for current version
  installCertmanager: false

  ## Configuration of jetstack/cert-manager
  certmanager:
    installCRDs: false
    nameOverride: certmanager

  ## https://docs.gitlab.com/charts/charts/nginx/
  ## https://docs.gitlab.com/charts/architecture/decisions#nginx-ingress
  ## Installation & configuration of charts/ingress-nginx:
  nginx-ingress: &nginx-ingress
    enabled: false

  ## Installation & configuration of stable/prometheus
  ## See dependencies in Chart.yaml for current version
  prometheus:
    install: false

  ## Configuration of Redis
  ## https://docs.gitlab.com/charts/architecture/decisions#redis
  ## https://docs.gitlab.com/charts/installation/deployment.html#redis
  redis:
    global:
      imagePullSecrets:
      - private-registry

    install: true
    auth:
      existingSecret: gitlab-redis-secret
      existingSecretKey: secret
      usePasswordFiles: true
    architecture: standalone
    cluster:
      enabled: false
    metrics:
      enabled: true
      image:
        registry: registry1.dso.mil/ironbank/bitnami
        repository: analytics/redis-exporter
        tag: v1.78.0
        pullSecrets: []
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        capabilities:
          drop:
            - ALL
    serviceAccount:
      automountServiceAccountToken: false
    securityContext:
      runAsUser: 1001
      fsGroup: 1001
      runAsNonRoot: true
    image:
      registry: registry1.dso.mil/ironbank/bitnami
      repository: redis
      tag: 8.2.2
      pullSecrets: []
    master:
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        capabilities:
          drop:
            - ALL
    slave:
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        capabilities:
          drop:
            - ALL
    sentinel:
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
    volumePermissions:
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
    sysctlImage:
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi

  ## Installation & configuration of stable/postgresql
  ## See dependencies in Chart.yaml for current version
  postgresql:
    install: true
    postgresqlDatabase: gitlabhq_production
    global:
      imagePullSecrets:
        - private-registry
      security:
        allowInsecureImages: true
    image:
      registry: registry1.dso.mil
      repository: ironbank/bitnami/postgres
      tag: 17.4.0
    auth:
      username: gitlab
      ## These need to be set, for the sake of bitnami/postgresql upgrade patterns.
      ## They are overridden by use of `existingSecret`
      password: bogus-satisfy-upgrade
      postgresPassword: bogus-satisfy-upgrade
      database: "gitlabhq_production"
      ##
      usePasswordFiles: false
      existingSecret: '{{ include "gitlab.psql.password.secret" . }}'
      secretKeys:
        adminPasswordKey: postgresql-postgres-password
        userPasswordKey: '{{ include "gitlab.psql.password.key" $ }}'
    primary:
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 500m
          memory: 500Mi
      ## Sets persistence to work with the IB image
      persistence:
        mountPath: /var/lib/postgresql
      initdb:
        scriptsConfigMap: '{{ include "gitlab.psql.initdbscripts" $}}'
        user: gitlab
      extraVolumeMounts:
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
        - mountPath: /opt/bitnami/postgresql/conf
          name: empty-dir
          subPath: app-conf-dir
        - mountPath: /opt/bitnami/postgresql/tmp
          name: empty-dir
          subPath: app-tmp-dir
        - name: runtime
          mountPath: /var/run/postgresql
        - name: custom-init-scripts
          mountPath: /docker-entrypoint-preinitdb.d/init_revision.sh
          subPath: init_revision.sh
        - name: registry-database-password
          mountPath: /etc/gitlab/postgres/registry_database_password
          subPath: database_password
          readOnly: true
      extraVolumes:
        - name: empty-dir
          emptyDir: { }
        - name: runtime
          emptyDir: { }
        - name: registry-database-password
          projected:
            sources:
              - secret:
                  name: '{{ include "gitlab.registry.database.password.secret" . }}'
                  items:
                    - key: '{{ include "gitlab.registry.database.password.key" . }}'
                      path: database_password

      containerSecurityContext:
        enabled: true
        runAsUser: 1001
        runAsGroup: 1001
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        seLinuxOptions: {}
      podAnnotations:
        postgresql.gitlab/init-revision: "1"
    metrics:
      enabled: false
      service:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9187"
          gitlab.com/prometheus_scrape: "true"
          gitlab.com/prometheus_port: "9187"

      ## Optionally define additional custom metrics
      ## ref: https://github.com/wrouesnel/`_exporter#adding-new-metrics-via-a-config-file

    # Added by BB to get IB image working with bitnami subchart
    ## extraEnv to set scram-sha-256 auth
    postgresqlInitdbArgs: "-A scram-sha-256"
    ## Sets the securityContext needed for the IB image
    securityContext:
      enabled: true
      fsGroup: 26
      runAsUser: 26
      runAsGroup: 26
    ## Sets persistence to work with the IB image
    postgresqlDataDir: /var/lib/postgresql/pgdata/data

    volumePermissions:
      enabled: false

  ## Installation & configuration charts/registry
  ## https://docs.gitlab.com/charts/architecture/decisions#registry
  ## https://docs.gitlab.com/charts/charts/registry/
  registry:
    enabled: true
    init:
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 200m
          memory: 200Mi
      containerSecurityContext:
        capabilities:
          drop:
            - ALL
    resources:
      limits:
        cpu: 200m
        memory: 1024Mi
      requests:
        cpu: 200m
        memory: 1024Mi
    image:
      repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-container-registry
      tag: 18.4.2
      pullSecrets:
      - name: private-registry
    ingress:
      enabled: false # Local setting in subchart must be overridden
    # The registry debug.addr.port is used for metrics. Default is 5001
    metrics:
      enabled: true
      path: /metrics
      serviceMonitor:
        enabled: true
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      capabilities:
        drop:
          - ALL

  ## Automatic shared secret generation
  ## https://docs.gitlab.com/charts/installation/secrets
  ## https://docs.gitlab.com/charts/charts/shared-secrets.html
  shared-secrets:
    enabled: true
    rbac:
      create: true
    selfsign:
      image:
        repository: registry1.dso.mil/ironbank/gitlab/gitlab/cfssl-self-sign
        tag: 1.6.1
      keyAlgorithm: "rsa"
      keySize: "4096"
      expiry: "3650d"
      caSubject: "GitLab Helm Chart"
    env: production
    serviceAccount:
      enabled: true
      create: true
      name: # Specify a pre-existing ServiceAccount name
      automountServiceAccountToken: false
    resources:
      requests:
        cpu: 300m
        memory: 200Mi
      limits:
        cpu: 300m
        memory: 200Mi
    securityContext:
      # in debian/alpine based images, this is `nobody:nogroup`
      runAsUser: 65534
      runAsGroup: 65534
      fsGroup: 65534
      seccompProfile:
        type: "RuntimeDefault"
    containerSecurityContext:
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      capabilities:
        drop: [ "ALL" ]
    tolerations: []
    podLabels: {}
    annotations:
      sidecar.istio.io/inject: "true"

  ## Installation & configuration of gitlab/gitlab-runner
  ## See dependencies in Chart.yaml for current version
  gitlab-runner:
    install: false

  ## Settings for individual sub-charts under GitLab
  ## Note: Many of these settings are configurable via globals
  gitlab:
    containerSecurityContext:
      capabilities:
        drop:
          - ALL
    init:
      containerSecurityContext:
        capabilities:
          drop:
            - ALL
    certificates:
      init:
        securityContext:
          capabilities:
            drop:
              - ALL
          runAsUser: 65534
          runAsNonRoot: true
    ## https://docs.gitlab.com/charts/charts/gitlab/toolbox
    toolbox:
      replicas: 1
      antiAffinityLabels:
        matchLabels:
          app: gitaly
      image:
        repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-toolbox
        tag: 18.4.2
        pullSecrets:
        - name: private-registry
      init:
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
          limits:
            cpu: 200m
            memory: 200Mi
        containerSecurityContext:
          capabilities:
            drop:
              - ALL
      resources:
        requests:
          cpu: 2
          memory: 3.5Gi
        limits:
          cpu: 2
          memory: 3.5Gi
      annotations:
        sidecar.istio.io/proxyMemory: 512Mi
        sidecar.istio.io/proxyMemoryLimit: 512Mi
      backups:
        cron:
          resources:
            requests:
              cpu: 500m
              memory: 768Mi
            limits:
              cpu: 500m
              memory: 768Mi
          istioShutdown: "&& echo \"Backup Complete\" && until curl -fsI http://localhost:15021/healthz/ready; do echo \"Waiting for Istio sidecar proxy...\"; sleep 3; done && sleep 5 && echo \"Stopping the istio proxy...\" && curl -X POST http://localhost:15020/quitquitquit"
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        capabilities:
          drop:
            - ALL
      customScripts:
        # this will be mounted into the toolbox container at `/scripts/custom/testing.rb`
        # execute it in the toolbox with `gitlab-rails runner /scripts/custom/testing.rb`
        #testing.rb: |
        #  puts "testing"

    gitlab-exporter:
      enabled: false
      init:
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
        containerSecurityContext:
          capabilities:
            drop:
              - ALL
      resources:
        limits:
          cpu: 150m
          memory: 200Mi
        requests:
          cpu: 150m
          memory: 200Mi
      capabilities:
        drop:
          - ALL
      image:
        repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-exporter
        tag: 18.4.2
        pullSecrets:
        - name: private-registry
      metrics:
        enabled: true
        port: 9168
        serviceMonitor:
          enabled: true
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        capabilities:
          drop:
            - ALL

    ## https://docs.gitlab.com/charts/charts/gitlab/migrations
    migrations:
      # istio sidecar injection for the migration job causes difficult errors. disable istio for this job
      annotations:
        sidecar.istio.io/inject: "true"
      init:
        resources:
          limits:
            cpu: 500m
            memory: 768Mi
          requests:
            cpu: 500m
            memory: 768Mi
        containerSecurityContext:
          capabilities:
            drop:
              - ALL
      resources:
        limits:
          cpu: 500m
          memory: 1.5G
        requests:
          cpu: 500m
          memory: 1.5G
      image:
        repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-toolbox
        tag: 18.4.2
        pullSecrets:
        - name: private-registry
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        capabilities:
          drop:
            - ALL

    ## https://docs.gitlab.com/charts/charts/gitlab/webservice
    webservice:
      init:
        resources:
          # https://docs.gitlab.com/charts/charts/gitlab/webservice/index.html#memory-requestslimits
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
        containerSecurityContext:
          capabilities:
            drop:
              - ALL
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        capabilities:
          drop:
            - ALL
      resources:
        # https://docs.gitlab.com/charts/charts/gitlab/webservice/index.html#memory-requestslimits
        limits:
          cpu: 1500m # match upstream
          memory: 3G # match upstream
        requests:
          cpu: 300m # double the default
          memory: 2.5G # = 2 * 1.25G assuming there are 2 workerProcesses configured
      image:
        repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-webservice
        tag: 18.4.2
        pullSecrets:
        - name: private-registry
      workhorse:
        resources:
          # https://docs.gitlab.com/charts/charts/gitlab/webservice/index.html#memory-requestslimits
          limits:
            cpu: 600m
            memory: 2.5G
          requests:
            cpu: 600m
            memory: 2.5G
        image: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-workhorse
        tag: 18.4.2
        pullSecrets:
        - name: private-registry
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
        containerSecurityContext:
          capabilities:
            drop:
              - ALL
      ingress:
        enabled: false  # Local setting in subchart must be overridden
      metrics:
        enabled: true
        port: 8083
        serviceMonitor:
          enabled: true
      helmTests:
        enabled: false
    ## https://docs.gitlab.com/charts/charts/gitlab/sidekiq
    sidekiq:
      image:
        repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-sidekiq
        tag: 18.4.2
        pullSecrets:
        - name: private-registry
      init:
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
        containerSecurityContext:
          capabilities:
            drop:
              - ALL
      resources:
        requests:
          memory: 3G
          cpu: 1500m
        limits:
          memory: 3G
          cpu: 1500m
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        capabilities:
          drop:
            - ALL

    ## https://docs.gitlab.com/charts/charts/gitlab/gitaly
    gitaly:
      image:
        repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitaly
        tag: 18.4.2
        pullSecrets:
        - name: private-registry
      init:
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
        containerSecurityContext:
          capabilities:
            drop:
              - ALL
      resources:
        requests:
          cpu: 400m
          memory: 600Mi
        limits:
          cpu: 400m
          memory: 600Mi
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        capabilities:
          drop:
            - ALL

    ## https://docs.gitlab.com/charts/charts/gitlab/gitlab-shell
    gitlab-shell:
      image:
        repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-shell
        tag: 18.4.2
        pullSecrets:
        - name: private-registry
      init:
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
        containerSecurityContext:
          capabilities:
            drop:
              - ALL
      resources:
        limits:
          cpu: 300m
          memory: 300Mi
        requests:
          cpu: 300m
          memory: 300Mi
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        capabilities:
          drop:
            - ALL
      # metrics:
      #   enabled: true
      #   serviceMonitor:
      #     enabled: true
      # https://docs.gitlab.com/ee/administration/operations/fast_ssh_key_lookup.html#use-gitlab-sshd-instead-of-openssh
      # gitlab-sshd is in Alpha. It is not ready for production use.
      # is needed for prometheus servicemonitor metrics to work for gitlab-shell
      # sshDaemon: gitlab-sshd

    mailroom:
      image:
        repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-mailroom
        tag: 18.4.2
        pullSecrets:
          - name: private-registry
      containerSecurityContext:
        capabilities:
          drop:
            - ALL

    ## https://docs.gitlab.com/charts/charts/gitlab/gitlab-grafana
    #   gitlab-grafana:
    ## https://docs.gitlab.com/charts/charts/gitlab/gitlab-pages
    gitlab-pages:
      service:
        customDomains:
          type: ClusterIP
      image:
        repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitlab-pages
        tag: 18.4.2
      containerSecurityContext:
        capabilities:
          drop:
            - ALL
    ## https://docs.gitlab.com/charts/charts/gitlab/kas
    #   kas:
    ## https://docs.gitlab.com/charts/charts/gitlab/praefect
    praefect:
      image:
        repository: registry1.dso.mil/ironbank/gitlab/gitlab/gitaly
        tag: 18.4.2
      init:
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
        containerSecurityContext:
          capabilities:
            drop:
              - ALL
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 1
          memory: 1Gi
      containerSecurityContext:
        capabilities:
          drop:
            - ALL

  ## Override minio sub-chart values
  minio:
    ## disabling default ingress creation
    ingress:
      enabled: false
    # set resource QoS
    init:
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 200m
          memory: 200Mi
      containerSecurityContext:
        capabilities:
          drop:
            - ALL
    resources:
      limits:
        cpu: 200m
        memory: 300Mi
      requests:
        cpu: 200m
        memory: 300Mi
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      capabilities:
        drop:
          - ALL
    # Additional job annotations
    jobAnnotations:
      sidecar.istio.io/inject: "true"
    # use Ironbank hardened images for MinIO
    image: registry1.dso.mil/ironbank/opensource/minio/minio
    imageTag: RELEASE.2024-06-04T19-20-08Z
    pullSecrets:
    - name: private-registry
    minioMc:
      # the MinIO sub-chart config script was modified to work with newer mc version in IronBank image
      #   chart/charts/minio/templates/_helper_create_buckets.sh
      #       line 65
      #        /usr/bin/mc policy set $POLICY myminio/$BUCKET
      image: registry1.dso.mil/ironbank/opensource/minio/mc
      tag: RELEASE.2024-10-02T08-27-28Z
      pullSecrets:
      - name: private-registry

# Big Bang Additions
domain: dev.bigbang.mil
# Used for Istio SSO serviceEntry
sso:
  enabled: false
  host: login.dso.mil
istio:
  # Toggle istio integration
  enabled: false
  injection: disabled
  hardened:
    enabled: false
    outboundTrafficPolicyMode: "REGISTRY_ONLY"
    customServiceEntries: []
      # - name: "allow-google"
      #   enabled: true
      #   spec:
      #     exportTo:
      #       - "."
      #     hosts:
      #       - google.com
      #     location: MESH_EXTERNAL
      #     ports:
      #       - number: 443
      #         protocol: TLS
      #         name: https
      #     resolution: DNS
    customAuthorizationPolicies: []
    # - name: "allow-nothing"
    #   enabled: true
    #   spec: {}
    gitlabRunner:
      enabled: true
      namespaces:
        - gitlab-runner
    # gitlab-ci-pipelines-exporter
    gcpe:
      enabled: true
      namespaces:
        - gitlab-ci-pipelines-exporter
    monitoring:
      enabled: true
      namespaces:
        - monitoring
      principals:
        - cluster.local/ns/monitoring/sa/monitoring-grafana
        - cluster.local/ns/monitoring/sa/monitoring-monitoring-kube-alertmanager
        - cluster.local/ns/monitoring/sa/monitoring-monitoring-kube-operator
        - cluster.local/ns/monitoring/sa/monitoring-monitoring-kube-prometheus
        - cluster.local/ns/monitoring/sa/monitoring-monitoring-kube-state-metrics
        - cluster.local/ns/monitoring/sa/monitoring-monitoring-prometheus-node-exporter
  gitlab:
    # Toggle vs creation
    enabled: true
    annotations: {}
    labels: {}
    gateways:
      - istio-system/main
    # optional - only affects the Istio VirtualService ingress. Does not affect Gitlab configuration
    hosts: null
    selectorLabels:
      app: webservice
  registry:
    # Toggle vs creation
    enabled: true
    annotations: {}
    labels: {}
    gateways:
      - istio-system/main
    # optional - only affects the Istio VirtualService ingress. Does not affect Gitlab configuration
    hosts: null
    selectorLabels:
      app: registry
  pages:
    # Toggle vs creation
    enabled: false
    annotations: {}
    ingressLabels:
      app: pages-ingressgateway
      istio: ingressgateway
    labels: {}
    gateways:
      - istio-system/pages
    # Enable or disable custom domains
    customDomains:
      enabled: true
    #only affects the Istio VirtualService ingress. Does not affect Gitlab configuration. Must be populated as a wildcard.
    hosts:
    - '*.pages.dev.bigbang.mil'
  # -- Default peer authentication
  mtls:
    # -- STRICT = Allow only mutual TLS traffic,
    # PERMISSIVE = Allow both plain text and mutual TLS traffic
    mode: STRICT

monitoring:
  enabled: false

networkPolicies:
  enabled: false
  ingressLabels:
    app: istio-ingressgateway
    istio: ingressgateway
  # See `kubectl cluster-info` and then resolve to IP
  controlPlaneCidr: 0.0.0.0/0
  vpcCidr: 0.0.0.0/0
  egressPort:
  gitalyEgress:
    enabled: false
  additionalPolicies: []

openshift: false

# Track if AWS IAM Profile is used for Object Storage
use_iam_profile: false

bbtests:
  enabled: false
  cypress:
    resources:
      requests:
        cpu: 1
        memory: "2Gi"
      limits:
        cpu: 1
        memory: "2Gi"
    artifacts: true
    envs:
      cypress_url: http://gitlab-webservice-default:8181
      cypress_gitlab_first_name: "test"
      cypress_gitlab_last_name: "user"
      cypress_gitlab_username: "testuser"
      cypress_gitlab_password: "Password123h56a78"
      cypress_gitlab_email: "testuser@example.com"
      cypress_gitlab_project: "my-awesome-project"
      cypress_keycloak_username: "cypress"
      cypress_keycloak_password: "tnr_w!G33ZyAt@C8"
    secretEnvs:
      - name: cypress_adminpassword
        valueFrom:
          secretKeyRef:
            name: gitlab-gitlab-initial-root-password
            key: password
  scripts:
    image: "registry1.dso.mil/bigbang-ci/devops-tester:1.1.2"
    additionalVolumes:
      - name: docker-config
        secret:
          secretName: private-registry
          items:
          - key: .dockerconfigjson
            path: auth.json
    additionalVolumeMounts:
      - name: docker-config
        mountPath: /.docker/
    envs:
      GITLAB_USER: "root"
      GITLAB_EMAIL: "gitlab-root-user@example.com"
      GITLAB_HOST: gitlab-webservice-default.gitlab.svc.cluster.local:8181
      GITLAB_PROJECT: "bigbang-test-project-2"
      GITLAB_REGISTRY: gitlab-registry-test-svc.gitlab.svc.cluster.local:80
      GITLAB_REPOSITORY: http://gitlab-webservice-default.gitlab.svc.cluster.local:8181
